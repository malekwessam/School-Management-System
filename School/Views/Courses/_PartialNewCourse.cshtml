@model School.Models.Course

<div class="modal-header">
    <h5 class="modal-title" id="exampleModalLabel"></h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>



<div class="modal-body">
    @using (Html.BeginForm("Create","Courses",FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Course</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div id="tabs">

                <ul>
                    <li><a href="#tabs-1">Info</a></li>
                    <li><a href="#tabs-2">Others</a></li>

                </ul>
                <div id="tabs-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.courseName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.courseName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.courseName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.credits, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.credits, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.credits, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Level2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Level2", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Level2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Rating, "Please Select")
                            @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsCourseActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IsCourseActive)
                            @Html.ValidationMessageFor(model => model.IsCourseActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div id="tabs-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.courseDescribtion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.courseDescribtion, 8, 30, htmlAttributes: new { style = "width:100%;max-width:100%;" })
                            @Html.ValidationMessageFor(model => model.courseDescribtion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>

            <br />
            <div class="form-group">
                <div class=" col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

</div>



<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

</div>

<script>
    $(function () {
        var tabs = $("#tabs").tabs();
        var previouslyFocused = false;

        tabs.find(".ui-tabs-nav").sortable({
            axis: "x",

            // Sortable removes focus, so we need to restore it if the tab was focused
            // prior to sorting
            start: function (event, ui) {
                previouslyFocused = document.activeElement === ui.item[0];
            },
            stop: function (event, ui) {
                tabs.tabs("refresh");
                if (previouslyFocused) {
                    ui.item.trigger("focus");
                }
            }
        });
    });
</script>